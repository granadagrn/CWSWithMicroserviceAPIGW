# Register as 'api-gateway' in Eureka
spring.application.name=api-gateway
server.port=8082

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
eureka.instance.prefer-ip-address=true
# Enabling Actuator Endpoints
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true
# Startup Delay Configuration
eureka.client.initial-instance-info-replication-interval-seconds=5
spring.cloud.gateway.discovery.locator.enabled=false
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Spring Cloud Gateway Routes
# allow forwarding custom headers
spring.cloud.gateway.forwarded-headers-strategy=framework
spring.cloud.gateway.routes[0].id=customer-service
spring.cloud.gateway.routes[0].uri=lb://CUSTOMER-SERVICE
# 'lb://' means load-balanced through Eureka
spring.cloud.gateway.routes[0].predicates[0]=Path=/customers/**
spring.cloud.gateway.routes[0].filters[1]=AddRequestHeader=Authorization, #{token}
# Redirect requests starting with /customers to customer-service
spring.cloud.gateway.routes[0].filters=TokenRelay
spring.cloud.gateway.routes[1].id=address-service
spring.cloud.gateway.routes[1].uri=lb://ADDRESS-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/addresses/**
spring.cloud.gateway.routes[1].filters[1]=AddRequestHeader=Authorization, #{token}
spring.cloud.gateway.routes[1].filters=TokenRelay

# OAuth2 Configuration for API Gateway
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_CWSMU_REALM}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_CWSMU_REALM}/protocol/openid-connect/certs
keycloak.token-endpoint=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_CWSMU_REALM}/protocol/openid-connect/token
#keycloak.client-secret=${KEYCLOAK_CWSMU_API_CLIENT_SECRET}
#keycloak.realm=${KEYCLOAK_CWSMU_REALM}
#keycloak.client-id=${KEYCLOAK_CWSMU_API_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CWSMU_API_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CWSMU_API_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_CWSMU_REALM}
keycloak.realm.public-key=${KEYCLOAK_CAR_RS256_PUBLIC_KEY}

# logging.level.org.springframework.cloud.gateway=DEBUG
# logging.level.org.springframework.boot.context.properties.bind=DEBUG
# logging.level.org.springframework.cloud.netflix.eureka=DEBUG
# logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework=DEBUG
logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG
logging.level.com.microservices=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#logging.level.org.springframework.boot=DEBUG
logging.level.org.springframework.security=DEBUG
#logging.level.com.netflix=DEBUG
#logging.level.reactor=DEBUG
#logging.level.sql=DEBUG
#logging.level.root=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.validator=DEBUG
